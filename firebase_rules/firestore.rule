rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(){
      return isSignedIn() && (request.auth.uid == resource.data.owner_id) 
    }

    function isAdmin(){
      return isSignedIn() && (request.auth.uid == "Y11axwPd6heYY48jweWEZ9gEmp83")  
    }

    match /points/{point} {
      function isValid(){
        return request.resource.data.keys().hasAll(['coordinates', 'created', 'name', 'owner_id', 'public']);
      }


      allow read: if resource.data.public == true || (request.auth != null && request.auth.uid == resource.data.owner_id);
      allow create: if isSignedIn() && isAdmin();
      // allow create: if isSignedIn() &&  isValid();
      allow update: if isOwner() && isValid();
      allow delete: if isOwner();


    }
    match /paths/{pathId} {
      function isValid() {
        return request.resource.data.keys().hasAll(['destination_id', 'source_id', 'created'])
          && request.resource.data.created is timestamp
      }

      allow read: if isAdmin()
      // allow create: if isValid() && isAdmin();
      allow create: if true;
      allow update: if isValid() && isAdmin();
    }
  }
}